# Nome do Workflow
name: DevOpsLab Pipeline

# Evento que irá acionar a pipeline
# (on) ativa o evento (push) de push (branches) na branch (main) main
on: 
  push:
    branches:
      - main

# Descrição dos jobs da pipe
# (build) nome do job 
#(runs-on) define a máquina virtual com sistema operacional na versão XYZ que o job será executado
#(steps) definimos as atividades do Job, no caso o step se chama Git Clone (name) 
# esse step usa uma action (uses) chamada checkout na versão 2 (que copia o código do github para a vm)
#eu poderia colocar o comando direto ao invés de usar a action usando um run: git clone https://github.com/evelynesa/devOpsLab.git

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone
        uses: actions/checkout@v2
        
        #agora vamos instalar o Python que é a linguagem da nossa aplicacao
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
          
        #agora vamos instalar o Flask que é lib do Python para testes
      - name: Install Requirements
        run:  pip install flask
        
        #agora vamos executar o comando de testes              
      - name: Unit Test
        run: python -m unittest -v test
      
      #agora vamos adicionar a stack do sonar para que seja feita a qualidade de código
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:login

      - name: Docker Image & Push Heroku Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web


#Agora vamos configurar o deploy da aplicacao no Orquestrador de Containers
  Deploy:
    needs: Build #efetua o deploy apenas se o Build escrito na linha 19 rodar com sucesso. (needs) dependencia
    runs-on: ubuntu-latest #no Ubuntu na ultima versao

    steps:
      - name: Deploy Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web